version: 0.2

phases:
  pre_build:
    commands:
      - aws --version
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
      - ECR_HOST="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_HOST
      # # For building arm64 images
      # - docker run --privileged --rm tonistiigi/binfmt --install arm64

      # # For aws/codebuild/amazonlinux2-x86_64-standard:5.0
      # - ln -s /usr/local/bin/docker-buildx /usr/local/lib/docker/cli-plugins/docker-buildx

      # # For aws/codebuild/amazonlinux2-aarch64-standard:3.0
      # - mkdir -p /usr/libexec/docker/cli-plugins/
      # - wget -O /usr/libexec/docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.10.4/buildx-v0.10.4.linux-arm64
      # - chmod a+rx /usr/libexec/docker/cli-plugins/docker-buildx
  build:
    commands:
      - echo Build started on `date`
      - IMAGE_TAG=`date +%y%m%d-%H%M%S`
      - DOCKER_BUILDKIT=1 docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $ECR_HOST/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - docker push $ECR_HOST/$IMAGE_REPO_NAME:$IMAGE_TAG
      - printf '[{"name":"%s","imageUri":"%s"}]' $IMAGE_REPO_NAME $ECR_HOST/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json
      - printf '{"ImageURI":"%s"}' $ECR_HOST/$IMAGE_REPO_NAME:$IMAGE_TAG > imageDetail.json

artifacts:
  files:
    # ECS Standard Artifact
    - imagedefinitions.json
    # ECS Blue/Green Artifact
    - imageDetail.json
    - taskdef.json
    - appspec.yaml
